"""applicant

Revision ID: a02fe09cf64e
Revises: e634cd0711b3
Create Date: 2024-03-14 20:14:24.467360

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a02fe09cf64e'
down_revision: Union[str, None] = 'e634cd0711b3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('applicant', sa.Column('Name', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Last_name', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Patronymic', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Sex', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Birthday', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Type_of_ID_card', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Series_of_ID_card', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Number_of_ID_card', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Date_of_receive_ID_card', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Who_issued_ID_card', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Inn', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Snils', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Country_of_birth', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_inclusion_of_photo', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Benefits', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Need_for_a_hostel', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Benefits_for_settlement', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Foreign_language', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Sport', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Immediate_family', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Academic_degree', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Academic_title', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Work_phone', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Contact_phone', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Home_phone', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Mobile_phone', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Email', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Registration_address', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_code_of_the_locality', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_actual_address', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Admission_campaign', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Personal_number', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('General_condition', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_form_of_exams', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Special_conditions_for_exams', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Military_service', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Additional_status', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Application_number', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Filing_date', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Type_of_application', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Education_received', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Completed_educational_institution', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_document_of_the_received_education', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_form_of_obtaining_a_document_on_education', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_average_score_of_the_education_certificate', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Arrived_from_LPR_DPR_Kherson_region_Ukraine', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Post_528', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Pr_231', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Pr_245', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Type_of_cost_recovery', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_form_of_education', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Type_of_reception', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Additional_set', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Priority', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('End_to_end_priority', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Branch', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_forming_unit', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_direction_of_education', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Set_OP', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Selected_OP', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('CP', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('A_set_of_versions_OP_for_CP', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Type_of_CP', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Organization_of_CP', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Without_VI', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('A_separate_quota', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Special_quota', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Enrolls_in_parallel_education', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Status_of_the_selected_contest', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Submitted_original', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Consent_to_transfer', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Date_of_consent', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Final_agreement', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Exam_group', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_amount_of_points', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_results_of_the_introduction_tests', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Russian_language', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Social_Studies', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Composition', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Drawing', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Math', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('History_VO', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Mathematics_VO', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Physics_VO', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Computer_Science_VO', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Social_studies_VO', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Chemistry_VO', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_Russian_language_VO', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Computer_science_and_information_and_communication_technologies', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Theoretical_and_applied_mathematics', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Engineering_Chemistry', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Fundamentals_of_Social_Studies_and_social_communication', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Engineering_Physics', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('World_and_domestic_history', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Computer_Science_and_the_basics_of_programming', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Mathematics_and_the_beginnings_of_mathematical_analysis', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Color_composition', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Physics', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Chemistry', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('History', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('A_note_on_the_direction_or_speciality', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Accepted_the_application', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Note_to_the_statement', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_application_was_submitted_by_a_trusted_person', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_method_of_submitting_documents', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Document_return_method', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Olympiads', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('USE_results', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_status_of_the_exam_results', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Points_for_individual_achievements', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_amount_of_points_for_individual_achievements', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Points_for_individual_achievements_counted_as_an_advantage', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_amount_of_points_for_individual_achievements_counted_as_an_advantage', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_customer_organization', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Targeted_contract_training', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_contract_has_been_concluded', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_contract_has_been_paid', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('The_order_of_enrollment', sa.String(), nullable=False))
    op.add_column('applicant', sa.Column('Average_exam_score', sa.String(), nullable=False))
    op.drop_column('applicant', 'snils')
    op.drop_column('applicant', 'school')
    op.drop_column('applicant', 'name')
    op.drop_column('applicant', 'region')
    op.drop_column('applicant', 'surname')
    op.drop_column('applicant', 'inn')
    op.drop_column('applicant', 'city')
    op.drop_column('applicant', 'patronymic')
    op.drop_column('applicant', 'points')
    op.drop_column('applicant', 'street')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('applicant', sa.Column('street', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('applicant', sa.Column('points', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('applicant', sa.Column('patronymic', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('applicant', sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('applicant', sa.Column('inn', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('applicant', sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('applicant', sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('applicant', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('applicant', sa.Column('school', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('applicant', sa.Column('snils', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('applicant', 'Average_exam_score')
    op.drop_column('applicant', 'The_order_of_enrollment')
    op.drop_column('applicant', 'The_contract_has_been_paid')
    op.drop_column('applicant', 'The_contract_has_been_concluded')
    op.drop_column('applicant', 'Targeted_contract_training')
    op.drop_column('applicant', 'The_customer_organization')
    op.drop_column('applicant', 'The_amount_of_points_for_individual_achievements_counted_as_an_advantage')
    op.drop_column('applicant', 'Points_for_individual_achievements_counted_as_an_advantage')
    op.drop_column('applicant', 'The_amount_of_points_for_individual_achievements')
    op.drop_column('applicant', 'Points_for_individual_achievements')
    op.drop_column('applicant', 'The_status_of_the_exam_results')
    op.drop_column('applicant', 'USE_results')
    op.drop_column('applicant', 'Olympiads')
    op.drop_column('applicant', 'Document_return_method')
    op.drop_column('applicant', 'The_method_of_submitting_documents')
    op.drop_column('applicant', 'The_application_was_submitted_by_a_trusted_person')
    op.drop_column('applicant', 'Note_to_the_statement')
    op.drop_column('applicant', 'Accepted_the_application')
    op.drop_column('applicant', 'A_note_on_the_direction_or_speciality')
    op.drop_column('applicant', 'History')
    op.drop_column('applicant', 'Chemistry')
    op.drop_column('applicant', 'Physics')
    op.drop_column('applicant', 'Color_composition')
    op.drop_column('applicant', 'Mathematics_and_the_beginnings_of_mathematical_analysis')
    op.drop_column('applicant', 'Computer_Science_and_the_basics_of_programming')
    op.drop_column('applicant', 'World_and_domestic_history')
    op.drop_column('applicant', 'Engineering_Physics')
    op.drop_column('applicant', 'Fundamentals_of_Social_Studies_and_social_communication')
    op.drop_column('applicant', 'Engineering_Chemistry')
    op.drop_column('applicant', 'Theoretical_and_applied_mathematics')
    op.drop_column('applicant', 'Computer_science_and_information_and_communication_technologies')
    op.drop_column('applicant', 'The_Russian_language_VO')
    op.drop_column('applicant', 'Chemistry_VO')
    op.drop_column('applicant', 'Social_studies_VO')
    op.drop_column('applicant', 'Computer_Science_VO')
    op.drop_column('applicant', 'Physics_VO')
    op.drop_column('applicant', 'Mathematics_VO')
    op.drop_column('applicant', 'History_VO')
    op.drop_column('applicant', 'Math')
    op.drop_column('applicant', 'Drawing')
    op.drop_column('applicant', 'Composition')
    op.drop_column('applicant', 'Social_Studies')
    op.drop_column('applicant', 'Russian_language')
    op.drop_column('applicant', 'The_results_of_the_introduction_tests')
    op.drop_column('applicant', 'The_amount_of_points')
    op.drop_column('applicant', 'Exam_group')
    op.drop_column('applicant', 'Final_agreement')
    op.drop_column('applicant', 'Date_of_consent')
    op.drop_column('applicant', 'Consent_to_transfer')
    op.drop_column('applicant', 'Submitted_original')
    op.drop_column('applicant', 'Status_of_the_selected_contest')
    op.drop_column('applicant', 'Enrolls_in_parallel_education')
    op.drop_column('applicant', 'Special_quota')
    op.drop_column('applicant', 'A_separate_quota')
    op.drop_column('applicant', 'Without_VI')
    op.drop_column('applicant', 'Organization_of_CP')
    op.drop_column('applicant', 'Type_of_CP')
    op.drop_column('applicant', 'A_set_of_versions_OP_for_CP')
    op.drop_column('applicant', 'CP')
    op.drop_column('applicant', 'Selected_OP')
    op.drop_column('applicant', 'Set_OP')
    op.drop_column('applicant', 'The_direction_of_education')
    op.drop_column('applicant', 'The_forming_unit')
    op.drop_column('applicant', 'Branch')
    op.drop_column('applicant', 'End_to_end_priority')
    op.drop_column('applicant', 'Priority')
    op.drop_column('applicant', 'Additional_set')
    op.drop_column('applicant', 'Type_of_reception')
    op.drop_column('applicant', 'The_form_of_education')
    op.drop_column('applicant', 'Type_of_cost_recovery')
    op.drop_column('applicant', 'Pr_245')
    op.drop_column('applicant', 'Pr_231')
    op.drop_column('applicant', 'Post_528')
    op.drop_column('applicant', 'Arrived_from_LPR_DPR_Kherson_region_Ukraine')
    op.drop_column('applicant', 'The_average_score_of_the_education_certificate')
    op.drop_column('applicant', 'The_form_of_obtaining_a_document_on_education')
    op.drop_column('applicant', 'The_document_of_the_received_education')
    op.drop_column('applicant', 'Completed_educational_institution')
    op.drop_column('applicant', 'Education_received')
    op.drop_column('applicant', 'Type_of_application')
    op.drop_column('applicant', 'Filing_date')
    op.drop_column('applicant', 'Application_number')
    op.drop_column('applicant', 'Additional_status')
    op.drop_column('applicant', 'Military_service')
    op.drop_column('applicant', 'Special_conditions_for_exams')
    op.drop_column('applicant', 'The_form_of_exams')
    op.drop_column('applicant', 'General_condition')
    op.drop_column('applicant', 'Personal_number')
    op.drop_column('applicant', 'Admission_campaign')
    op.drop_column('applicant', 'The_actual_address')
    op.drop_column('applicant', 'The_code_of_the_locality')
    op.drop_column('applicant', 'Registration_address')
    op.drop_column('applicant', 'Email')
    op.drop_column('applicant', 'Mobile_phone')
    op.drop_column('applicant', 'Home_phone')
    op.drop_column('applicant', 'Contact_phone')
    op.drop_column('applicant', 'Work_phone')
    op.drop_column('applicant', 'Academic_title')
    op.drop_column('applicant', 'Academic_degree')
    op.drop_column('applicant', 'Immediate_family')
    op.drop_column('applicant', 'Sport')
    op.drop_column('applicant', 'Foreign_language')
    op.drop_column('applicant', 'Benefits_for_settlement')
    op.drop_column('applicant', 'Need_for_a_hostel')
    op.drop_column('applicant', 'Benefits')
    op.drop_column('applicant', 'The_inclusion_of_photo')
    op.drop_column('applicant', 'Country_of_birth')
    op.drop_column('applicant', 'Snils')
    op.drop_column('applicant', 'Inn')
    op.drop_column('applicant', 'Who_issued_ID_card')
    op.drop_column('applicant', 'Date_of_receive_ID_card')
    op.drop_column('applicant', 'Number_of_ID_card')
    op.drop_column('applicant', 'Series_of_ID_card')
    op.drop_column('applicant', 'Type_of_ID_card')
    op.drop_column('applicant', 'Birthday')
    op.drop_column('applicant', 'Sex')
    op.drop_column('applicant', 'Patronymic')
    op.drop_column('applicant', 'Last_name')
    op.drop_column('applicant', 'Name')
    # ### end Alembic commands ###
